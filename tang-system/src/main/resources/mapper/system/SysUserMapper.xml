<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tang.system.mapper.SysUserMapper">

    <resultMap id="SysUserMap" type="com.tang.system.entity.SysUser">
        <result property="userId" column="user_id" />
        <result property="deptId" column="dept_id" />
        <result property="username" column="username" />
        <result property="nickname" column="nickname" />
        <result property="email" column="email" />
        <result property="phone" column="phone" />
        <result property="gender" column="gender" />
        <result property="avatar" column="avatar" />
        <result property="password" column="password" />
        <result property="userType" column="user_type" />
        <result property="status" column="status" />
        <result property="delFlag" column="del_flag" />
        <result property="loginIp" column="login_ip" />
        <result property="loginDate" column="login_date" />
        <result property="createBy" column="create_by" />
        <result property="createTime" column="create_time" />
        <result property="updateBy" column="update_by" />
        <result property="updateTime" column="update_time" />
        <result property="remark" column="remark" />
        <association property="dept" javaType="com.tang.system.entity.SysDept" resultMap="SysDeptMap" />
    </resultMap>

    <resultMap id="SysDeptMap" type="com.tang.system.entity.SysDept">
        <result property="deptId" column="d_dept_id" />
        <result property="parentId" column="parent_id" />
        <result property="ancestors" column="ancestors" />
        <result property="deptName" column="dept_name" />
        <result property="sort" column="sort" />
        <result property="status" column="d_status" />
        <result property="createBy" column="d_create_by" />
        <result property="createTime" column="d_create_time" />
        <result property="updateBy" column="d_update_by" />
        <result property="updateTime" column="d_update_time" />
        <result property="remark" column="d_remark" />
    </resultMap>

    <sql id="SysUserVo">
        select u.user_id, u.dept_id, u.username, u.nickname, u.email, u.phone, u.gender, u.avatar, u.password, u.user_type,
            u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.update_by, u.update_time, u.remark,
            d.dept_id as d_dept_id, d.parent_id, d.ancestors, d.dept_name, d.sort, d.status as d_status,
            d.create_by as d_create_by, d.create_time as d_create_time, d.update_by as d_update_by, d.update_time as d_update_time, d.remark as d_remark
        from sys_user u
            left join sys_dept d on d.dept_id = u.dept_id
    </sql>

    <select id="selectUserList" resultMap="SysUserMap">
        <include refid="SysUserVo" />
        where u.del_flag = '0'
        <if test="deptId != null and deptId != 0">
            and ( u.dept_id = #{deptId} or u.dept_id in ( select dept_id from sys_dept where find_in_set(#{deptId}, ancestors) ) )
        </if>
        <if test="username != null and username != ''">
            and u.username = #{username}
        </if>
        <if test="nickname != null and nickname != ''">
            and u.nickname like concat('%', #{nickname}, '%')
            or to_pinyin(u.nickname) like concat('%', #{nickname}, '%')
        </if>
        <if test="gender != null and gender != ''">
            and u.gender = #{gender}
        </if>
        <if test="userType != null and userType != ''">
            and u.user_type = #{userType}
        </if>
        <if test="status != null and status != ''">
            and u.status = #{status}
        </if>
    </select>

    <select id="selectUserListFuzzy" resultMap="SysUserMap">
        <include refid="SysUserVo" />
        where u.del_flag = '0'
            and user_id not in ( select friend_id from app_friend_apply where user_id = #{userId} )
            and ( u.username like concat('%', #{keyword}, '%') or u.nickname like concat('%', #{keyword}, '%') )
            and user_id != #{userId}
    </select>

    <select id="selectUserByUserId" resultMap="SysUserMap">
        <include refid="SysUserVo" />
        where u.user_id = #{userId}
    </select>

    <select id="selectUserByUsername" resultMap="SysUserMap">
        <include refid="SysUserVo" />
        where u.username = #{username}
            and u.del_flag = '0'
    </select>

    <select id="selectUserByEmail" resultMap="SysUserMap">
        <include refid="SysUserVo" />
        where u.email = #{email}
            and u.del_flag = '0'
    </select>
    <select id="selectUserByUserType" resultMap="SysUserMap">
        <include refid="SysUserVo" />
        where u.username = #{username}
            and u.user_type = #{userType}
            and u.del_flag = '0'
    </select>

    <insert id="insertUser" useGeneratedKeys="true" keyProperty="userId">
        insert into sys_user (
            <if test="userId != null and userId != 0">user_id,</if>
            <if test="deptId != null and deptId != 0">dept_id,</if>
            <if test="username != null and username != ''">username,</if>
            <if test="nickname != null and nickname != ''">nickname,</if>
            <if test="email != null and email != ''">email,</if>
            <if test="phone != null and phone != ''">phone,</if>
            <if test="gender != null and gender != ''">gender,</if>
            <if test="avatar != null and avatar != ''">avatar,</if>
            <if test="password != null and password != ''">password,</if>
            <if test="userType != null and userType != ''">user_type,</if>
            <if test="createBy != null and createBy != ''">create_by,</if>
            <if test="remark != null and remark != ''">remark,</if>
            create_time
        ) values (
            <if test="userId != null and userId != ''">#{userId},</if>
            <if test="deptId != null and deptId != ''">#{deptId},</if>
            <if test="username != null and username != ''">#{username},</if>
            <if test="nickname != null and nickname != ''">#{nickname},</if>
            <if test="email != null and email != ''">#{email},</if>
            <if test="phone != null and phone != ''">#{phone},</if>
            <if test="gender != null and gender != ''">#{gender},</if>
            <if test="avatar != null and avatar != ''">#{avatar},</if>
            <if test="password != null and password != ''">#{password},</if>
            <if test="userType != null and userType != ''">#{userType},</if>
            <if test="createBy != null and createBy != ''">#{createBy},</if>
            <if test="remark != null and remark != ''">#{remark},</if>
            sysdate()
        )
    </insert>

    <update id="updateUserByUserId">
        update sys_user
        <set>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="nickname != null and nickname != ''">nickname = #{nickname},</if>
            <if test="email != null and email != ''">email = #{email},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="gender != null and gender != ''">gender = #{gender},</if>
            <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="userType != null and userType != ''">user_type = #{userType},</if>
            <if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
            <if test="loginDate != null">login_date = #{loginDate},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            <if test="remark != null and remark != ''">remark = #{remark},</if>
            update_time = sysdate()
        </set>
        where user_id = #{userId}
    </update>

    <update id="updateUserStatusByUserId">
        update sys_user set status = #{status} where user_id = #{userId}
    </update>

    <update id="updatePasswordByUserId">
        update sys_user set password = #{password} where user_id = #{userId}
    </update>

    <update id="updateAvatarByUserId">
        update sys_user set avatar = #{avatarPath} where user_id = #{userId}
    </update>

    <delete id="deleteUserByUserId">
        update sys_user set del_flag = '1' where user_id = #{userId}
    </delete>

    <delete id="deleteUserByUserIds">
        update sys_user set del_flag = '1' where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

</mapper>
