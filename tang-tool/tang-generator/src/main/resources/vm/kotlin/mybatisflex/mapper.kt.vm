package ${packageName}.mapper

import org.apache.ibatis.annotations.Mapper

import com.mybatisflex.core.BaseMapper
import com.mybatisflex.core.query.QueryWrapper
import com.tang.commons.utils.If
import com.tang.commons.utils.page.PageResult
import com.tang.extension.mybatisflex.utils.PageUtils
import ${packageName}.entity.$ClassName

/**
 * ${classComment}数据访问层
 *
 * @author $author
 */
@Mapper
interface ${ClassName}Mapper : BaseMapper<$ClassName> {

    /**
     * 查询${classComment}列表
     *
     * @param $className ${classComment}对象
     * @return ${classComment}列表
     */
    fun select${ClassName}List($className: $ClassName): PageResult {
#foreach ($column in $columnList)
#if($column.queryType == "equal")
        // queryWrapper.and(${CLASS_NAME}.${column.columnNameUpperUnderscore}.eq(${className}.get${column.columnNameUpperCamel}(), If::nonEmpty));
#end
#if($column.queryType == "fuzzy")
        //queryWrapper.and(${CLASS_NAME}.${column.columnNameUpperUnderscore}.like(${className}.get${column.columnNameUpperCamel}(), If::nonEmpty));
#end
#if($column.queryType == "findInSet")
        // queryWrapper.and(${CLASS_NAME}.${column.columnNameUpperUnderscore}.in(${className}.get${column.columnNameUpperCamel}()));
#end
#end

        return TODO()
    }

}
